gui-table {
  --icon-sort-default: ↕;
  --icon-sort-asc: ↓;
  --icon-sort-desc: ↑;
  --table-background-color: var(--bg-1);

  display: grid;
  grid-template-rows: min-content 1fr;
  overflow: hidden;
  height: 100%;
  width: 100%;
}

gui-table .gui-table-filter {
  visibility: hidden;
  height: 0;

  &::part(base) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}

gui-table .gui-table-filter.visible {
  visibility: visible;
  height: fit-content;
}

gui-table .gui-table {
  position: relative;
  display: grid;
  grid-template-rows: min-content 1fr;
  overflow: auto;
  height: 100%;
  width: 100%;
}

.gui-table gui-thead {
  position: sticky;
  top: 0;
  display: flex;
  width: 100%;
  min-width: fit-content;
  z-index: 1;
  opacity: 1;
  background-color: rgb(var(--base-0));
  border-bottom: 1px solid rgb(var(--base-2));
}
.gui-table gui-thead.gui-table-resizing > * {
  cursor: ew-resize !important;
  background-color: rgb(var(--base-0)) !important;
}
.gui-table gui-thead .gui-thead-type {
  color: var(--muted-color);
}
.gui-table gui-thead gui-thead-cell {
  --resizer-width: 3px;
  position: relative;
}
.gui-table gui-thead gui-thead-cell .gui-thead {
  display: flex;
  align-items: center;
  gap: var(--spacing);
  cursor: pointer;
  user-select: none;
  width: calc(100% - var(--resizer-width));
  padding-left: var(--spacing);
  padding-right: var(--spacing);
}
.gui-table gui-thead gui-thead-cell:hover {
  background-color: rgba(var(--base-1), 0.8);
}
.gui-table gui-thead gui-thead-cell.active .gui-thead-sorter,
.gui-table gui-thead gui-thead-cell.active .gui-thead-title {
  color: rgb(var(--accent-0));
}
.gui-table gui-thead gui-thead-cell .gui-thead-title {
  display: inline-flex;
  width: 100%;
  gap: var(--spacing);
  overflow: hidden;
  flex: 1;
}
.gui-table gui-thead gui-thead-cell .gui-thead-title .gui-thead-header {
  flex-shrink: 1; /* we want the header to ellipse but as last resort */
}
.gui-table gui-thead gui-thead-cell .gui-thead-title .gui-thead-type {
  flex-shrink: 10000; /* we really want the type to ellipse prior to the header */
}
.gui-table gui-thead gui-thead-cell .gui-thead-title .gui-thead-header,
.gui-table gui-thead gui-thead-cell .gui-thead-title .gui-thead-type {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.gui-table gui-thead gui-thead-cell .gui-thead-sorter {
  display: block;
  height: 28px;
  font-size: 26px;
  line-height: 20px;
}
.gui-table gui-thead gui-thead-cell .gui-thead-sorter:hover {
  color: var(--primary-hover);
}
.gui-table gui-thead gui-thead-cell .gui-thead-resizer {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  display: block;
  width: var(--resizer-width);
  background-color: rgba(var(--accent-0));
  height: 100%;
  cursor: ew-resize;
}
.gui-table gui-thead gui-thead-cell .gui-thead-filter {
  display: block;
  width: 20px;
  height: 20px;
  background-position: 1px 50%;
  background-repeat: no-repeat;
  background-size: 18px;
  background-image: var(--icon-search);
}
.gui-table gui-thead gui-thead-cell .gui-thead-filter:hover {
  background-color: var(--primary-focus);
}
.gui-table gui-thead gui-thead-cell .gui-thead-filter.open:hover {
  background-color: unset;
}
.gui-table gui-thead gui-thead-cell .gui-thead-dropdown {
  display: none;
  /* padding: calc(var(--spacing) * 0.5); */
  z-index: 10;
  width: 100%;
}
.gui-table gui-thead gui-thead-cell .gui-thead-dropdown.open {
  /* transform: scaleY(1); */
  display: block;
}

.gui-table gui-thead gui-thead-cell .gui-thead-dropdown > gui-search-input {
  --sl-focus-ring-width: 0;
  &::part(base) {
    border-radius: 0;
  }
}

.gui-table gui-tbody {
  position: relative;
  display: flex;
  flex-direction: column;
}
.gui-table gui-tbody gui-tbody-row {
  flex: 1;
  position: absolute;
  align-items: center;
  width: 100%;
  min-width: fit-content;
  display: flex;
  background-color: var(--table-background-color);
}
.gui-table gui-tbody gui-tbody-row:hover gui-tbody-cell {
  background-color: rgba(var(--base-1), 0.8);
}
.gui-table gui-tbody gui-tbody-row:nth-child(even):not(:hover) gui-tbody-cell {
  background-color: rgba(var(--base-1), 0.3);
}
.gui-table gui-tbody gui-tbody-row gui-tbody-cell {
  display: inline-flex;
  align-items: center;
  height: 100%;
  width: 100%;
  border-bottom: 1px solid rgb(var(--base-1));
  overflow: auto;
}

gui-tbody-cell > *:first-child {
  padding: 1px 2px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  width: 100%;
}

/* Special-case for gui-object within gui-table cells */
gui-tbody-cell > gui-object.gui-object-grid:first-child {
  padding: var(--spacing);
}
